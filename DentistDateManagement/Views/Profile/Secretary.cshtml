@model SecretaryViewModel
@{
    ViewData["Title"] = "Secretary";
}

@section Styles {
    <link href='/lib/fullcalendar/core/main.css' rel='stylesheet' />
    <link href='/lib/fullcalendar/daygrid/main.css' rel='stylesheet' />
    <link href="~/lib/fullcalendar/timegrid/main.css" rel="stylesheet" />
    <link href="~/lib/fullcalendar/bootstrap/main.css" rel="stylesheet" />
    <link href="~/lib/fullcalendar/list/main.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/css/tempusdominus-bootstrap-4.min.css" integrity="sha512-3JRrEUwaCkFUBLK1N8HehwQgu8e23jTH4np5NHOmQOobuC4ROQxFwFgBLTnhcnQRMs84muMh0PnnwXlPq5MGjg==" crossorigin="anonymous" />
    <script src="sweetalert2.all.min.js"></script>
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Yeni Randevu / Randevu Güncelleme</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <input hidden id="appointmentId" />
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Başlangıç Tarihi: </label>
                            <div class="input-group date" id="datetimepicker1" data-target-input="nearest">
                                <input id="inputStartDate" type="text" class="form-control datetimepicker-input" data-target="#datetimepicker1" />
                                <div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Bitiş Tarihi: </label>
                            <div class="input-group date" id="datetimepicker2" data-target-input="nearest">
                                <input id="inputEndDate" type="text" class="form-control datetimepicker-input" data-target="#datetimepicker2" />
                                <div class="input-group-append" data-target="#datetimepicker2" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Hastanın Adı: </label>
                            <input id="inputPatientName" type="text" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Hastanın Soyadı: </label>
                            <input id="inputPatientSurrname" type="text" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="form-control-label"> Açıklama: </label>
                            <input id="inputDescription" type="text" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Diş Hekimi: </label>
                            <select id="selectDentistId" asp-items="@Model.DentistsSelectList" class="form-control">
                                <option value="0">Diş Hekimini Seçiniz</option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button id="btnSave" type="button" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="detailModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Randevu Detayları</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Başlangıç Tarihi: </label>
                            <div class="input-group date" id="datetimepicker1" data-target-input="nearest">
                                <input disabled id="inputStartDateDetail" type="text" class="form-control datetimepicker-input" data-target="#datetimepicker1" />
                                <div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Bitiş Tarihi: </label>
                            <div class="input-group date" id="datetimepicker2" data-target-input="nearest">
                                <input disabled id="inputEndDateDetail" type="text" class="form-control datetimepicker-input" data-target="#datetimepicker2" />
                                <div class="input-group-append" data-target="#datetimepicker2" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Hastanın Adı: </label>
                            <input disabled id="inputPatientNameDetail" type="text" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Hastanın Soyadı: </label>
                            <input disabled id="inputPatientSurrnameDetail" type="text" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="form-control-label"> Açıklama: </label>
                            <input disabled id="inputDescriptionDetail" type="text" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            <label class="form-control-label">Diş Hekimi: </label>
                            <select disabled id="selectDentistIdDetail" asp-items="@Model.DentistsSelectList" class="form-control">
                                <option value="0">Diş Hekimini Seçiniz</option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btnDelete" type="button" class="btn btn-outline-danger">Sil</button>
                <button id="btnUpdate" type="button" class="btn btn-outline-primary">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Sayın, </h5>
                <h6 class="card-subtitle mb-2 text-muted">@Model.User.Name @Model.User.Surname</h6>
                <p class="card-text">DENTCLINIC Randevu Sistemine Hoş Geldiniz</p>
                <a asp-controller="Account" asp-action="LogOut" class="card-link">Çıkış Yap</a>
            </div>
        </div>
        <br />
        <ul class="list-group">
            @foreach (var item in Model.Dentists)
            {
                <li data-value="@item.Id" class="list-group-item">Dt. @item.Name @item.Surname<button class="btn btn-sm mt-2 pull-right" style="background-color:@item.Color"></button></li>
            }
        </ul>
    </div>
    <div class="col-md-9">
        <div class="card">
            <div class="card-body">
                <div id="calendar">


                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.28/moment-timezone-with-data-10-year-range.js"></script>
    <script src="~/lib/fullcalendar/core/main.js"></script>
    <script src="~/lib/fullcalendar/daygrid/main.js"></script>
    <script src="~/lib/fullcalendar/timegrid/main.js"></script>
    <script src="~/lib/fullcalendar/core/locales/tr.js"></script>
    <script src="~/lib/fullcalendar/bootstrap/main.js"></script>
    <script src="~/lib/fullcalendar/list/main.js"></script>
    <script src="~/lib/fullcalendar/interaction/main.js"></script>
    <script src="~/lib/fullcalendar/moment/main.js"></script>
    <script src="~/lib/fullcalendar/moment-timezone/main.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/js/tempusdominus-bootstrap-4.min.js" integrity="sha512-k6/Bkb8Fxf/c1Tkyl39yJwcOZ1P4cRrJu77p83zJjN2Z55prbFHxPs9vN7q3l3+tSMGPDdoH51AEU8Vgo1cgAA==" crossorigin="anonymous"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var selectedEvent = null;
            var events = [];
            var calendar = new FullCalendar.Calendar(calendarEl, {
                plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'bootstrap', 'momentTimezone'],
                themeSystem: 'bootstrap',
                bootstrapFontAwesome: {
                    today: 'calendar',
                    prev: 'fa-chevron-circle-left',
                    next: 'fa-chevron-circle-right',
                    listWeek: 'fa-list-alt'
                },
                timeZone: 'Europe/Istanbul',
                locale: 'tr',
                header: {
                    left: 'prev, next, today',
                    center: 'title',
                    right: 'dayGridMonth, timeGridWeek, timeGridDay, timeGridFourDay, listWeek'
                },
                footer: {
                    left: 'prevYear',
                    right: 'nextYear'
                },
                minTime: '09:00:00',
                maxTime: '21:30:00',
                slotLabelFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                },
                fixedWeekCount: true,
                showNonCurrentDates: false,
                contentHeight: 650,
                defaultView: 'dayGridMonth',
                weekends: true,
                hiddenDays: [0],
                allDaySlot: false,
                titleFormat: {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                },
                titleRangeSeparator: ' / ',
                columnHeaderFormat: {
                    weekday: 'long',
                },
                views: {
                    timeGridFourDay: {
                        duration: { days: 4 },
                        buttonText: '4 Gün'
                    }
                },
                editable: true,
                dragRevertDuration: 1500,
                eventDrop: function (dropEventInfo) {
                    var appointment = {
                        Id: dropEventInfo.event.id,
                        UserId: dropEventInfo.event.extendedProps.userId,
                        StartDate: moment(dropEventInfo.event.start).format('DD/MM/YYYY HH:mm'),
                        EndDate: moment(dropEventInfo.event.end).format('DD/MM/YYYY HH:mm'),
                        PatientName: dropEventInfo.event.extendedProps.patientName,
                        PatientSurrname: dropEventInfo.event.extendedProps.patientSurrname,
                        Description: dropEventInfo.event.extendedProps.description
                    }
                    saveAppointment(appointment);
                },
                eventResize: function (dropEventInfo) {
                    var appointment = {
                        Id: dropEventInfo.event.id,
                        UserId: dropEventInfo.event.extendedProps.userId,
                        StartDate: moment(dropEventInfo.event.start).format('DD/MM/YYYY HH:mm'),
                        EndDate: moment(dropEventInfo.event.end).format('DD/MM/YYYY HH:mm'),
                        PatientName: dropEventInfo.event.extendedProps.patientName,
                        PatientSurrname: dropEventInfo.event.extendedProps.patientSurrname,
                        Description: dropEventInfo.event.extendedProps.description
                    }
                    saveAppointment(appointment);
                },
                events: [],
                selectable: true,
                droppable: true,
                select: function (selectionInfo) {
                    console.log(selectionInfo);
                    selectedEvent = {
                        id: 0,
                        start: moment(selectionInfo.start),
                        end: moment(selectionInfo.end),
                        patientName: "",
                        PatientSurrname: "",
                        description: "",
                        dentistId: 0
                    }
                    openAddOrUpdateModal();
                },
                eventClick: function (info) {
                    selectedEvent = {
                        id: info.event.id,
                        start: moment(info.event.start),
                        end: moment(info.event.end),
                        patientName: info.event.extendedProps.patientName,
                        patientSurrname: info.event.extendedProps.patientSurname,
                        description: info.event.extendedProps.description,
                        dentistId: info.event.extendedProps.userId
                    }
                    $('#selectDentistIdDetail').val(info.event.extendedProps.userId);
                    $('#inputStartDateDetail').val(moment(info.event.start).format('DD/MM/YYYY HH:ss'));
                    $('#inputEndDateDetail').val(moment(info.event.end).format('DD/MM/YYYY HH:ss'));
                    $('#inputPatientNameDetail').val(info.event.extendedProps.patientName);
                    $('#inputPatientSurrnameDetail').val(info.event.extendedProps.patientSurname);
                    $('#inputDescriptionDetail').val(info.event.extendedProps.description);

                    $('#detailModel').modal();
                }


            });

            calendar.render();
            getAppointments();

            $('#datetimepicker1, #datetimepicker2').datetimepicker({
                format: 'DD/MM/YYYY HH:mm'
            });

            function getAppointments() {
                $.ajax({
                    type: 'GET',
                    url: '/Appointment/GetAppointments',
                    success: function (response) {
                        events = [];
                        var sources = calendar.getEventSources();
                        for (var i = 0; i < sources.length; i++) {
                            sources[i].remove();
                        }
                        for (var i = 0; i < response.length; i++) {
                            events.push({
                                id: response[i].id,
                                title: response[i].patientName + "  " + response[i].patientSurname,
                                dentist: response[i].dentist,
                                patientName: response[i].patientName,
                                patientSurname: response[i].patientSurname,
                                start: response[i].startDate,
                                end: response[i].endDate,
                                description: response[i].description,
                                color: response[i].color,
                                userId: response[i].userId
                            });
                        }
                        calendar.addEventSource(events);
                    },

                });
            }

            function getAppointmentsByDentist(dentistId) {
                $.ajax({
                    type: 'GET',
                    url: '/Appointment/GetAppointmentsByDentist?userId=' + dentistId,
                    success: function (response) {
                        events = [];
                        var sources = calendar.getEventSources();
                        for (var i = 0; i < sources.length; i++) {
                            sources[i].remove();
                        }
                        for (var i = 0; i < response.length; i++) {
                            events.push({
                                id: response[i].id,
                                title: response[i].patientName + "  " + response[i].patientSurname,
                                dentist: response[i].dentist,
                                patientName: response[i].patientName,
                                patientSurname: response[i].patientSurname,
                                start: response[i].startDate,
                                end: response[i].endDate,
                                description: response[i].description,
                                color: response[i].color,
                                userId: response[i].userId
                            });
                        }
                        calendar.addEventSource(events);
                    },

                });
            }

            function openAddOrUpdateModal() {
                if (selectedEvent != null) {
                    $('#appointmentId').val(selectedEvent.id);
                    $('#inputStartDate').val(selectedEvent.start.format('DD/MM/YYYY HH:mm'));
                    $('#inputEndDate').val(selectedEvent.end.format('DD/MM/YYYY HH:mm'));
                    $('#inputPatientName').val(selectedEvent.patientName);
                    $('#inputPatientSurrname').val(selectedEvent.PatientSurrname);
                    $('#inputDescription').val(selectedEvent.description);
                    $('#selectDentistId').val(selectedEvent.dentistId);
                }
                $('#exampleModal').modal();
            }

            function saveAppointment(data) {
                $.ajax({

                    type: 'POST',
                    url: '/Appointment/AddOrUpdateAppointment',
                    data: data,
                    success: function (response) {
                        if (response === "200") {
                            $('#exampleModal').modal('hide');
                            if (data.Id === "0") {
                                swal.fire({
                                    icon: 'success',
                                    title: 'Randevu Kaydı Alınmıştır.',
                                    showconfirmbutton: false,
                                    timer: 2000
                                });
                            } else {
                                swal.fire({
                                    icon: 'success',
                                    title: 'Randevu Başarıyla Güncellenmişitir.',
                                    showconfirmbutton: false,
                                    timer: 2000
                                });
                            }
                            alertify.success('BAŞARILI.');
                            getAppointments();
                        } else {
                            $('#exampleModal').modal('hide');
                            swal.fire({
                                icon: 'error',
                                title: 'Randevu Kaydı Alınamamıştır.',
                                showConfirmButton: false,
                                timer: 2000
                            });
                            alertify.error('BAŞARISIZ');
                        }
                    },
                    error: function () {
                        $('#exampleModal').modal('hide');
                        swal.fire({
                            icon: 'error',
                            title: 'Erişim Sağlanamadı',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                });
            }

            $('#btnSave').click(function () {
                if ($('#inputPatientName').val() === "" && $('#inputPatientSurname').val() === "") {
                    swal.fire({
                        icon: 'error',
                        title: 'Hasta Bilgisi Belirtilmelidir',
                        showConfirmButton: false,
                        timer: 2000
                    });
                    return;
                }
                var appointment = {
                    Id: $('#appointmentId').val(),
                    UserId: $('#selectDentistId').val(),
                    StartDate: $('#inputStartDate').val(),
                    EndDate: $('#inputEndDate').val(),
                    PatientName: $('#inputPatientName').val(),
                    PatientSurrname: $('#inputPatientSurrname').val(),
                    Description: $('#inputDescription').val()
                }
                saveAppointment(appointment);
            });

            $('#btnUpdate').click(function () {
                $('#detailModel').modal('hide');
                openAddOrUpdateModal();
            });

            $('#btnDelete').click(function () {
                Swal.fire({
                    title: 'Randevu Silinecek !',
                    text: "Randevuyu Silmek İstediğinizden Emin Misiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, sil!',
                    cancelButtonText : 'Hayır, silme.'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'GET',
                            url: '/Appointment/DeleteAppointment?id=' + selectedEvent.id,
                            success: function (response) {
                                if (response === '200') {
                                    var event = calendar.getElementById(selectedEvent.id);
                                    event.remove();
                                    $('#detailModel').modal('hide');
                                    swal.fire({
                                        icon: 'success',
                                        title: 'Randevu Kaydı Silindi.',
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                }
                            },
                            error: function () {
                                $('#detailModel').modal('hide');
                                swal.fire({
                                    icon: 'error',
                                    title: 'Randevu Kaydı Silinemedi.',
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }

                        });
                        let timerInterval
                        Swal.fire({
                            title: 'Randevu Kaydı Siliniyor',
                            html: '<b></b> Ekran Kapanıyor',
                            timer: 1000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading()
                                timerInterval = setInterval(() => {
                                    const content = Swal.getContent()
                                    if (content) {
                                        const b = content.querySelector('b')
                                        if (b) {
                                            b.textContent = Swal.getTimerLeft()
                                        }
                                    }
                                }, 100)
                            },
                            willClose: () => {
                                clearInterval(timerInterval)
                            }
                        }).then((result) => {
                            /* Read more about handling dismissals below */
                            if (result.dismiss === Swal.DismissReason.timer) {
                                console.log('I was closed by the timer')
                            }
                        });
                        alertify.success("SİLİNDİ");
                        $('#detailModel').modal('hide');
                        getAppointments();
                    }
                })
            });

            $('.list-group-item').click(function () {
                $('.list-group-item').removeClass('active');
                $(this).addClass('active');
                getAppointmentsByDentist($(this).data('value'));
            })

        });

    </script>
}